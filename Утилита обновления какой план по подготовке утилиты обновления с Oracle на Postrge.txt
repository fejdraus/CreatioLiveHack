Создание утилиты для миграции с СУБД Oracle на СУБД PostgreSQL пока не планируется. Мы собираем feedback относительно пожеланий по переходу с Oracle на Postgre, при массовых запросах будем пересматривать планы.
На текущий момент из-за числа более приоритетных по числу обратной связи задач, не включали в Roadmap текущего года данную задачу.

На данном этапе мы можем помочь описанием процесса и рекомендациями по написанию собственной утилиты миграции - привожу ниже описание и рекомендации.

Для миграции данных с Oracle на PostgreSQL нужно:
1.	Получить необходимую структуру БД на коробочном продукте PostgreSQL.
a.	Если в  пользовательских пакетах содержатся SQL-скрипты для Oracle, то необходимо создать аналогичные SQL-скрипты, которые выполняют такие же манипуляции с данными или объектами СУБД, но использующий SQL-синтаксис PostgreSQL
b.	Если кастомизации содержат в коде использование CustomQuery, то необходимо заменить его на использование СУБД-независимое API (классы EntitySchemaQuery, Select, Insert, Update, Delete)
c.	Если используются приложения Markeplace, то необходимо убедиться, что они уже поддерживают работу в PostgreSQL
d.	Адаптированные пакеты необходимо установить на коробочный продукт PostgreSQL. 
e.	Если в пакете Custom есть кастомизации связанные с БД, то его также необходимо выгрузить и установить на коробочный продукт PostgreSQL.
2.	Очистить все данные на коробочном продукте PostgreSQL. Самый быстрый способ, это:
a.	Cделать дамп (с помощью утилиты pg_dump.exe, с параметром «--schema-only», таким образом будет сделан дамп без данных.
b.	Восстановить этот дамп в новую (пустую) БД  (с помощью утилиты pg_restore.exe, с тем же параметром «--schema-only»)
3.	Отключить все индексы, констрейнты, триггеры.
4.	Провести миграцию данных (У нас нет рекомендаций по инструментам миграции).
Особое внимание необходимо уделить типам данных при конвертировании и таблицам кварца.
Если использовать не готовую утилиту миграции, то рекомендуем реализовать свою, которая автоматизирует 2-5 пункты,  с помощью фреймворка .NET Core с использованием API https://www.npgsql.org/doc/api/Npgsql.NpgsqlBinaryImporter.html, которое входит в состав библиотеки Npgsql.
5.	Включить все индексы, констрейнты, триггеры.
